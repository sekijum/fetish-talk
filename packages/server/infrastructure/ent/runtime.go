// Code generated by ent, DO NOT EDIT.

package ent

import (
	"server/infrastructure/ent/adminuser"
	"server/infrastructure/ent/board"
	"server/infrastructure/ent/comment"
	"server/infrastructure/ent/commentattachment"
	"server/infrastructure/ent/schema"
	"server/infrastructure/ent/thread"
	"server/infrastructure/ent/threadtag"
	"server/infrastructure/ent/user"
	"server/infrastructure/ent/userboardlike"
	"server/infrastructure/ent/userboardsubscription"
	"server/infrastructure/ent/usercommentlike"
	"server/infrastructure/ent/usercommentsubscription"
	"server/infrastructure/ent/userthreadlike"
	"server/infrastructure/ent/userthreadsubscription"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	adminuserFields := schema.AdminUser{}.Fields()
	_ = adminuserFields
	// adminuserDescName is the schema descriptor for name field.
	adminuserDescName := adminuserFields[1].Descriptor()
	// adminuser.NameValidator is a validator for the "name" field. It is called by the builders before save.
	adminuser.NameValidator = adminuserDescName.Validators[0].(func(string) error)
	// adminuserDescEmail is the schema descriptor for email field.
	adminuserDescEmail := adminuserFields[2].Descriptor()
	// adminuser.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	adminuser.EmailValidator = adminuserDescEmail.Validators[0].(func(string) error)
	// adminuserDescCreatedAt is the schema descriptor for createdAt field.
	adminuserDescCreatedAt := adminuserFields[4].Descriptor()
	// adminuser.DefaultCreatedAt holds the default value on creation for the createdAt field.
	adminuser.DefaultCreatedAt = adminuserDescCreatedAt.Default.(func() time.Time)
	// adminuserDescUpdatedAt is the schema descriptor for updatedAt field.
	adminuserDescUpdatedAt := adminuserFields[5].Descriptor()
	// adminuser.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	adminuser.DefaultUpdatedAt = adminuserDescUpdatedAt.Default.(func() time.Time)
	// adminuser.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	adminuser.UpdateDefaultUpdatedAt = adminuserDescUpdatedAt.UpdateDefault.(func() time.Time)
	boardFields := schema.Board{}.Fields()
	_ = boardFields
	// boardDescTitle is the schema descriptor for title field.
	boardDescTitle := boardFields[2].Descriptor()
	// board.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	board.TitleValidator = boardDescTitle.Validators[0].(func(string) error)
	// boardDescDescription is the schema descriptor for description field.
	boardDescDescription := boardFields[3].Descriptor()
	// board.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	board.DescriptionValidator = boardDescDescription.Validators[0].(func(string) error)
	// boardDescStatus is the schema descriptor for status field.
	boardDescStatus := boardFields[5].Descriptor()
	// board.DefaultStatus holds the default value on creation for the status field.
	board.DefaultStatus = boardDescStatus.Default.(int)
	// boardDescCreatedAt is the schema descriptor for createdAt field.
	boardDescCreatedAt := boardFields[6].Descriptor()
	// board.DefaultCreatedAt holds the default value on creation for the createdAt field.
	board.DefaultCreatedAt = boardDescCreatedAt.Default.(func() time.Time)
	// boardDescUpdatedAt is the schema descriptor for updatedAt field.
	boardDescUpdatedAt := boardFields[7].Descriptor()
	// board.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	board.DefaultUpdatedAt = boardDescUpdatedAt.Default.(func() time.Time)
	// board.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	board.UpdateDefaultUpdatedAt = boardDescUpdatedAt.UpdateDefault.(func() time.Time)
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescGuestName is the schema descriptor for guestName field.
	commentDescGuestName := commentFields[4].Descriptor()
	// comment.GuestNameValidator is a validator for the "guestName" field. It is called by the builders before save.
	comment.GuestNameValidator = commentDescGuestName.Validators[0].(func(string) error)
	// commentDescIPAddress is the schema descriptor for ip_address field.
	commentDescIPAddress := commentFields[6].Descriptor()
	// comment.IPAddressValidator is a validator for the "ip_address" field. It is called by the builders before save.
	comment.IPAddressValidator = commentDescIPAddress.Validators[0].(func(string) error)
	// commentDescStatus is the schema descriptor for status field.
	commentDescStatus := commentFields[7].Descriptor()
	// comment.DefaultStatus holds the default value on creation for the status field.
	comment.DefaultStatus = commentDescStatus.Default.(int)
	// commentDescCreatedAt is the schema descriptor for createdAt field.
	commentDescCreatedAt := commentFields[8].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the createdAt field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	// commentDescUpdatedAt is the schema descriptor for updatedAt field.
	commentDescUpdatedAt := commentFields[9].Descriptor()
	// comment.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	comment.DefaultUpdatedAt = commentDescUpdatedAt.Default.(func() time.Time)
	// comment.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	comment.UpdateDefaultUpdatedAt = commentDescUpdatedAt.UpdateDefault.(func() time.Time)
	commentattachmentFields := schema.CommentAttachment{}.Fields()
	_ = commentattachmentFields
	// commentattachmentDescOrder is the schema descriptor for order field.
	commentattachmentDescOrder := commentattachmentFields[3].Descriptor()
	// commentattachment.DefaultOrder holds the default value on creation for the order field.
	commentattachment.DefaultOrder = commentattachmentDescOrder.Default.(int)
	threadFields := schema.Thread{}.Fields()
	_ = threadFields
	// threadDescTitle is the schema descriptor for title field.
	threadDescTitle := threadFields[3].Descriptor()
	// thread.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	thread.TitleValidator = threadDescTitle.Validators[0].(func(string) error)
	// threadDescDescription is the schema descriptor for description field.
	threadDescDescription := threadFields[4].Descriptor()
	// thread.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	thread.DescriptionValidator = threadDescDescription.Validators[0].(func(string) error)
	// threadDescIsAutoGenerated is the schema descriptor for isAutoGenerated field.
	threadDescIsAutoGenerated := threadFields[6].Descriptor()
	// thread.DefaultIsAutoGenerated holds the default value on creation for the isAutoGenerated field.
	thread.DefaultIsAutoGenerated = threadDescIsAutoGenerated.Default.(bool)
	// threadDescIsNotifyOnComment is the schema descriptor for isNotifyOnComment field.
	threadDescIsNotifyOnComment := threadFields[7].Descriptor()
	// thread.DefaultIsNotifyOnComment holds the default value on creation for the isNotifyOnComment field.
	thread.DefaultIsNotifyOnComment = threadDescIsNotifyOnComment.Default.(bool)
	// threadDescIPAddress is the schema descriptor for ip_address field.
	threadDescIPAddress := threadFields[8].Descriptor()
	// thread.IPAddressValidator is a validator for the "ip_address" field. It is called by the builders before save.
	thread.IPAddressValidator = threadDescIPAddress.Validators[0].(func(string) error)
	// threadDescStatus is the schema descriptor for status field.
	threadDescStatus := threadFields[9].Descriptor()
	// thread.DefaultStatus holds the default value on creation for the status field.
	thread.DefaultStatus = threadDescStatus.Default.(int)
	// threadDescCreatedAt is the schema descriptor for createdAt field.
	threadDescCreatedAt := threadFields[10].Descriptor()
	// thread.DefaultCreatedAt holds the default value on creation for the createdAt field.
	thread.DefaultCreatedAt = threadDescCreatedAt.Default.(func() time.Time)
	// threadDescUpdatedAt is the schema descriptor for updatedAt field.
	threadDescUpdatedAt := threadFields[11].Descriptor()
	// thread.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	thread.DefaultUpdatedAt = threadDescUpdatedAt.Default.(func() time.Time)
	// thread.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	thread.UpdateDefaultUpdatedAt = threadDescUpdatedAt.UpdateDefault.(func() time.Time)
	threadtagFields := schema.ThreadTag{}.Fields()
	_ = threadtagFields
	// threadtagDescName is the schema descriptor for name field.
	threadtagDescName := threadtagFields[1].Descriptor()
	// threadtag.NameValidator is a validator for the "name" field. It is called by the builders before save.
	threadtag.NameValidator = threadtagDescName.Validators[0].(func(string) error)
	// threadtagDescCreatedAt is the schema descriptor for createdAt field.
	threadtagDescCreatedAt := threadtagFields[2].Descriptor()
	// threadtag.DefaultCreatedAt holds the default value on creation for the createdAt field.
	threadtag.DefaultCreatedAt = threadtagDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescDisplayName is the schema descriptor for displayName field.
	userDescDisplayName := userFields[4].Descriptor()
	// user.DisplayNameValidator is a validator for the "displayName" field. It is called by the builders before save.
	user.DisplayNameValidator = userDescDisplayName.Validators[0].(func(string) error)
	// userDescStatus is the schema descriptor for status field.
	userDescStatus := userFields[6].Descriptor()
	// user.DefaultStatus holds the default value on creation for the status field.
	user.DefaultStatus = userDescStatus.Default.(int)
	// userDescCreatedAt is the schema descriptor for createdAt field.
	userDescCreatedAt := userFields[7].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the createdAt field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updatedAt field.
	userDescUpdatedAt := userFields[8].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	userboardlikeFields := schema.UserBoardLike{}.Fields()
	_ = userboardlikeFields
	// userboardlikeDescLikedAt is the schema descriptor for likedAt field.
	userboardlikeDescLikedAt := userboardlikeFields[2].Descriptor()
	// userboardlike.DefaultLikedAt holds the default value on creation for the likedAt field.
	userboardlike.DefaultLikedAt = userboardlikeDescLikedAt.Default.(func() time.Time)
	userboardsubscriptionFields := schema.UserBoardSubscription{}.Fields()
	_ = userboardsubscriptionFields
	// userboardsubscriptionDescIsNotified is the schema descriptor for isNotified field.
	userboardsubscriptionDescIsNotified := userboardsubscriptionFields[2].Descriptor()
	// userboardsubscription.DefaultIsNotified holds the default value on creation for the isNotified field.
	userboardsubscription.DefaultIsNotified = userboardsubscriptionDescIsNotified.Default.(bool)
	// userboardsubscriptionDescIsChecked is the schema descriptor for isChecked field.
	userboardsubscriptionDescIsChecked := userboardsubscriptionFields[3].Descriptor()
	// userboardsubscription.DefaultIsChecked holds the default value on creation for the isChecked field.
	userboardsubscription.DefaultIsChecked = userboardsubscriptionDescIsChecked.Default.(bool)
	// userboardsubscriptionDescSubscribedAt is the schema descriptor for subscribedAt field.
	userboardsubscriptionDescSubscribedAt := userboardsubscriptionFields[4].Descriptor()
	// userboardsubscription.DefaultSubscribedAt holds the default value on creation for the subscribedAt field.
	userboardsubscription.DefaultSubscribedAt = userboardsubscriptionDescSubscribedAt.Default.(func() time.Time)
	usercommentlikeFields := schema.UserCommentLike{}.Fields()
	_ = usercommentlikeFields
	// usercommentlikeDescLikedAt is the schema descriptor for likedAt field.
	usercommentlikeDescLikedAt := usercommentlikeFields[2].Descriptor()
	// usercommentlike.DefaultLikedAt holds the default value on creation for the likedAt field.
	usercommentlike.DefaultLikedAt = usercommentlikeDescLikedAt.Default.(func() time.Time)
	usercommentsubscriptionFields := schema.UserCommentSubscription{}.Fields()
	_ = usercommentsubscriptionFields
	// usercommentsubscriptionDescIsNotified is the schema descriptor for isNotified field.
	usercommentsubscriptionDescIsNotified := usercommentsubscriptionFields[2].Descriptor()
	// usercommentsubscription.DefaultIsNotified holds the default value on creation for the isNotified field.
	usercommentsubscription.DefaultIsNotified = usercommentsubscriptionDescIsNotified.Default.(bool)
	// usercommentsubscriptionDescIsChecked is the schema descriptor for isChecked field.
	usercommentsubscriptionDescIsChecked := usercommentsubscriptionFields[3].Descriptor()
	// usercommentsubscription.DefaultIsChecked holds the default value on creation for the isChecked field.
	usercommentsubscription.DefaultIsChecked = usercommentsubscriptionDescIsChecked.Default.(bool)
	// usercommentsubscriptionDescSubscribedAt is the schema descriptor for subscribedAt field.
	usercommentsubscriptionDescSubscribedAt := usercommentsubscriptionFields[4].Descriptor()
	// usercommentsubscription.DefaultSubscribedAt holds the default value on creation for the subscribedAt field.
	usercommentsubscription.DefaultSubscribedAt = usercommentsubscriptionDescSubscribedAt.Default.(func() time.Time)
	userthreadlikeFields := schema.UserThreadLike{}.Fields()
	_ = userthreadlikeFields
	// userthreadlikeDescLikedAt is the schema descriptor for likedAt field.
	userthreadlikeDescLikedAt := userthreadlikeFields[2].Descriptor()
	// userthreadlike.DefaultLikedAt holds the default value on creation for the likedAt field.
	userthreadlike.DefaultLikedAt = userthreadlikeDescLikedAt.Default.(func() time.Time)
	userthreadsubscriptionFields := schema.UserThreadSubscription{}.Fields()
	_ = userthreadsubscriptionFields
	// userthreadsubscriptionDescIsNotified is the schema descriptor for isNotified field.
	userthreadsubscriptionDescIsNotified := userthreadsubscriptionFields[2].Descriptor()
	// userthreadsubscription.DefaultIsNotified holds the default value on creation for the isNotified field.
	userthreadsubscription.DefaultIsNotified = userthreadsubscriptionDescIsNotified.Default.(bool)
	// userthreadsubscriptionDescIsChecked is the schema descriptor for isChecked field.
	userthreadsubscriptionDescIsChecked := userthreadsubscriptionFields[3].Descriptor()
	// userthreadsubscription.DefaultIsChecked holds the default value on creation for the isChecked field.
	userthreadsubscription.DefaultIsChecked = userthreadsubscriptionDescIsChecked.Default.(bool)
	// userthreadsubscriptionDescSubscribedAt is the schema descriptor for subscribedAt field.
	userthreadsubscriptionDescSubscribedAt := userthreadsubscriptionFields[4].Descriptor()
	// userthreadsubscription.DefaultSubscribedAt holds the default value on creation for the subscribedAt field.
	userthreadsubscription.DefaultSubscribedAt = userthreadsubscriptionDescSubscribedAt.Default.(func() time.Time)
}
