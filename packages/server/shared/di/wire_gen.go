// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	service2 "server/application/service"
	"server/domain/service"
	"server/infrastructure/datasource"
	"server/infrastructure/ent"
	"server/presentation/controller"
)

// Injectors from wire.go:

func InitializeControllers() (*ControllersSet, func(), error) {
	client, cleanup, err := ent.ProvideClient()
	if err != nil {
		return nil, nil, err
	}
	boardClientDatasource := datasource.NewBoardClientDatasource(client)
	boardDomainService := service.NewBoardDomainService(boardClientDatasource)
	boardClientService := service2.NewBoardClientService(boardClientDatasource, boardDomainService)
	boardClientController := board_client_controller.NewBoardClientController(boardClientService)
	controllersSet := &ControllersSet{
		BoardClientController: boardClientController,
	}
	return controllersSet, func() {
		cleanup()
	}, nil
}

// wire.go:

var entSet = wire.NewSet(ent.ProvideClient)

var datasourceSet = wire.NewSet(datasource.NewBoardClientDatasource)

var domainServiceSet = wire.NewSet(service.NewBoardDomainService)

var serviceSet = wire.NewSet(service2.NewBoardClientService)

var controllerSet = wire.NewSet(board_client_controller.NewBoardClientController)

type ControllersSet struct {
	BoardClientController *board_client_controller.BoardClientController
}
