package board_client_service

import (
	"context"
	repository "server/application/repository"
	"server/domain/model"

	"github.com/google/wire"
)

type BoardClientService struct {
	boardRepository repository.BoardClientRepository
}

func NewBoardClientService(boardRepository repository.BoardClientRepository) *BoardClientService {
	return &BoardClientService{boardRepository: boardRepository}
}

func (s *BoardClientService) CreateBoard(ctx context.Context, title, description string, userId int, threadTitle, threadDescription string) (*model.Board, error) {
	board := &model.Board{
		Title:       title,
		Description: description,
		UserId:      userId,
		Status:      "Public",
		Threads: []*model.Thread{
			{
				Title:           threadTitle,
				Description:     threadDescription,
				UserId:          userId,
				IsAutoGenerated: true,
			},
		},
	}
	return s.boardRepository.Create(ctx, board)
}

var Provider = wire.NewSet(NewBoardClientService)
